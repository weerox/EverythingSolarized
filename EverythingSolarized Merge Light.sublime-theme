{
	"extends": "Merge.sublime-theme",
	"variables": {
		"base03":  "#002b36",
		"base02":  "#073642",
		"base01":  "#586e75",
		"base00":  "#657b83",
		"base0":   "#839496",
		"base1":   "#93a1a1",
		"base2":   "#eee8d5",
		"base3":   "#fdf6e3",
		"yellow":  "#b58900",
		"orange":  "#cb4b16",
		"red":     "#dc322f",
		"magenta": "#d33682",
		"violet":  "#6c71c4",
		"blue":    "#268bd2",
		"cyan":    "#2aa198",
		"green":   "#859900"
	},
	"rules": [
		// GENERAL
		{
			"class": "label_control",
			"color": "var(base00)",
			"opacity": 1
		},
		// The default theme use layer1 for the default/hover/pressed color
		// and layer2 for the "dangerous" color.
		// Here, we use layer0 for the default color,
		// layer1 for hover/pressed and
		// layer2 for the dangerous color.
		{
			"class": "button_control",
			"layer0.tint": "var(base2)",
			"layer0.opacity": 1,
			"layer1.tint": "var(base3)",
			"layer1.opacity": 0,
			"layer2.tint": "var(red)",
			"layer2.opacity": 0
		},
		{
			"class": "button_control",
			"attributes": ["hover"],
			"layer1.opacity": { "target": 0.6, "speed": 4.0, "interpolation": "smoothstep" }
		},
		{
			"class": "button_control",
			"attributes": ["pressed"],
			"layer1.opacity": 1
		},
		{
			"class": "button_control",
			"attributes": ["confirm"],
			"layer2.opacity": 0.9
		},
		{
			"class": "button_control",
			"attributes": ["disabled"],
			"layer3.tint": "blue",
			"layer3.opacity": 1
		},
		// This is supposed to change the text color of a "confirm" button,
		// but it is overriden by the "expand/collapse all" style below,
		// so it is restated there.
		{
			"class": "label_control",
			"parents": [{"class": "button_control", "attributes": ["confirm"]}],
			"color": "var(base3)",
			"shadow_offset": [0, 0]
		},
		{
			"class": "disclosure_button_control",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "disclosure_button_control",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)",
			"layer0.opacity": 1
		},
		// ICONS
		// TODO Should the hover attribute be changed to the parent hover?
		// When a button is large, the icon won't switch if the mouse is
		// outside the icon, but inside the button.
		// The icon_folder doesn't need a hover style.
		{
			"class": "icon_folder",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_location_bar",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_location_bar",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_side_bar",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_side_bar",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_back",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_back",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_forward",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_forward",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_stash",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_stash",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_pop_stash",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_pop_stash",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_search",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_search",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_more",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_more",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_pull",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_pull",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_push",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_push",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_options_dropdown",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_options_dropdown",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_cancel",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_cancel",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_visible",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_visible",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		// This icon is a bit special, because it has a 'slash' on layer1.
		{
			"class": "icon_hidden",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1,
			"layer1.tint": "var(red)",
			"layer1.opacity": 1
		},
		{
			"class": "icon_hidden",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_uninitialized_submodule",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_uninitialized_submodule",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		{
			"class": "icon_section_actions",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_section_actions",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		// We don't need hover styles for 'ahead' and 'behind'.
		{
			"class": "icon_ahead",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_behind",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		// layer0 is the inside and layer1 is the outline.
		{
			"class": "icon_filter",
			"layer0.opacity": 0,
			"layer1.tint": "var(base1)",
			"layer1.opacity": 1
		},
		{
			"class": "icon_filter",
			"attributes": ["hover"],
			"layer1.tint": "var(base01)"
		},
		{
			"class": "icon_dropdown_button",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "icon_dropdown_button",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)"
		},
		// TODO Style the icons for the file_icon.
		// HEADER
		{
			"class": "header",
			"layer0.tint": "var(base3)"
		},
		// Style the info_area the same way as the button_control.
		{
			"class": "info_area",
			"layer0.tint": "var(base2)",
			"layer0.opacity": 1,
			"layer1.tint": "var(base3)",
			"layer1.opacity": 0,
		},
		{
			"class": "info_area",
			"attributes": ["hover"],
			"layer1.opacity": { "target": 0.6, "speed": 4.0, "interpolation": "smoothstep" }
		},
		{
			"class": "progress_bar_control",
			"layer0.tint": "var(base2)",
		},
		{
			"class": "progress_gauge_control",
			"layer0.tint": "var(base1)",
		},
		{
			"class": "git_output_button",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1,
			"layer1.tint": "var(base1)",
			"layer1.opacity": 1,
			"layer2.tint": "var(base1)",
			"layer2.opacity": 1
		},
		{
			"class": "git_output_button",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)",
			"layer1.tint": "var(base01)"
		},
		{
			"class": "git_output_button succeeded",
			"layer2.tint": "var(green)"
		},
		{
			"class": "git_output_button failed",
			"layer2.tint": "var(red)"
		},
		{
			"class": "git_output_button running",
			"layer2.tint": "var(blue)"
		},
		{
			"class": "git_output_button cancelled",
			"layer2.tint": "var(yellow)"
		},
		// TODO Style toggle_diverged_banner_button.
		{
			"class": "search_dialog",
			"layer0.tint": "var(base3)"
		},
		{
			"class": "search_text_control",
			"layer0.tint": "var(base3)"
		},
		// REPOSITORY TABS
		{
			"class": "root_tabs",
			"layer0.tint": "var(base2)"
		},
		{
			"class": "tab_control",
			"layer0.tint": "var(base2)",
			"layer0.opacity": 1,
			"layer1.opacity": 0
		},
		{
			"class": "tab_control",
			"attributes": ["selected"],
			"layer0.tint": "var(base3)"
		},
		{
			"class": "tab_label",
			"color": "var(base00)",
			"opacity": 1
		},
		{
			"class": "tab_close_button",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "tab_close_button",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)",
			"layer0.opacity": 1
		},
		{
			"class": "new_tab_button",
			"layer0.opacity": 0,
			"layer1.opacity": 0,
			"layer2.opacity": 0,
			"layer3.opacity": 0
		},
		{
			"class": "new_tab_icon",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "new_tab_icon",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)",
		},
		{
			"class": "tab_select_dropdown_icon",
			"layer0.tint": "var(base1)",
			"layer0.opacity": 1
		},
		{
			"class": "tab_select_dropdown_icon",
			"attributes": ["hover"],
			"layer0.tint": "var(base01)",
		},
		// OTHER TABS
		{
			"class": "tab",
			"attributes": ["selected"],
			"layer0.tint": "var(base3)",
			"layer0.opacity": 1
		},
		{
			"class": "side_bar_tabs",
			"layer0.tint": "var(base2)"
		},
		{
			"class": "details_tab_bar",
			"layer0.tint": "var(base2)"
		},
		// SIDE BAR (LOCATION, COMMITS, FILES)
		{
			"class": "side_bar_container",
			"layer0.tint": "var(base3)"
		},
		// COMMITS
		{
			"class": "commit_summary_control",
			"parents": [{"class": "commit_table_row", "attributes": ["selected"]}],
			"layer0.tint": "var(base2)",
			"layer0.opacity": 1
		},
		{
			"class": "commit_edges_control",
			"num_colors": 8,
			// I initially wanted to have the colors
			// arranged such that those with a lower hue
			// in CIELCh comes first and higher hues is last.
			// The problem is that some edges will look visually indistinguishable.
			// Instead, I decided to jump every other color, so it makes "two laps"
			// around the hue values.
			"color0": "var(red)",
			"color1": "var(yellow)",
			"color2": "var(cyan)",
			"color3": "var(violet)",
			"color4": "var(orange)",
			"color5": "var(green)",
			"color6": "var(blue)",
			"color7": "var(magenta)"
		},
		{
			"class": "index_files_label",
			"color": "var(base00)"
		},
		{
			"class": "index_action_label",
			"color": "var(base1)"
		},
		{
			"class": "message_label",
			"color": "var(base00)"
		},
		{
			"class": "author_label",
			"color": "var(base1)"
		},
		{
			"class": "time_label",
			"color": "var(base1)"
		},
		// TODO commit_file_name_label and commit_file_path_label.
		// I don't know how to display these, so I won't style them.
		{
			"class": "commit_annotations",
			// This is the same number as in commit_edges_control.
			"num_unique_columns": 8
		},
		{
			"class": "commit_annotation",
			"color": "var(base1)",
			"background_color": "var(base2)"
		},
		{
			"class": "commit_annotation",
			"parents": [{"class": "commit_table_row", "attributes": ["selected"]}],
			"background_color": "var(base3)"
		},
		// Each column_# matches the color in commit_edges_control, but this is 1-indexed
		// and commit_edges_control is 0-indexed...
		// The default style also sets a general style, which is not present here.
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_1"]}],
			"border_color": "var(red)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_2"]}],
			"border_color": "var(yellow)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_3"]}],
			"border_color": "var(cyan)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_4"]}],
			"border_color": "var(violet)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_5"]}],
			"border_color": "var(orange)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_6"]}],
			"border_color": "var(green)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_7"]}],
			"border_color": "var(blue)"
		},
		{
			"class": "commit_annotation bordered",
			"parents": [{"class": "commit_annotations", "attributes": ["column_8"]}],
			"border_color": "var(magenta)"
		},
		{
			"class": "commit_annotation branch head",
			"color": "var(base3)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_1"]}],
			"background_color": "var(red)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_2"]}],
			"background_color": "var(yellow)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_3"]}],
			"background_color": "var(cyan)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_4"]}],
			"background_color": "var(violet)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_5"]}],
			"background_color": "var(orange)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_6"]}],
			"background_color": "var(green)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_7"]}],
			"background_color": "var(blue)"
		},
		{
			"class": "commit_annotation branch head",
			"parents": [{"class": "commit_annotations", "attributes": ["column_8"]}],
			"background_color": "var(magenta)"
		},
		// condensed_branch_annotation and file_annotation has same style as commit_annotation.
		{
			"class": "condensed_branch_annotation_container",
			"background_color": "var(base2)"
		},
		{
			"class": "condensed_branch_annotation_container",
			"parents": [{"class": "commit_table_row", "attributes": ["selected"]}],
			"background_color": "var(base3)"
		},
		{
			"class": "condensed_branch_annotation",
			"color": "var(base1)"
		},
		{
			"class": "condensed_branch_icon",
			"layer0.tint": "var(base1)"
		},
		{
			"class": "file_annotation",
			"color": "var(base1)",
			"background_color": "var(base2)"
		},
		{
			"class": "file_annotation",
			"parents": [{"class": "commit_table_row", "attributes": ["selected"]}],
			"background_color": "var(base3)"
		},
		// COMMIT VIEW
		{
			"class": "details_panel",
			"layer0.tint": "var(base3)"
		},
		{
			"class": "field_name_label",
			"color": "var(base1)"
		},
		// These annotation styles is taken from the Solarized Color Scheme by braver
		// so it matches the style in the actual diff.
		{
			"class": "deleted_annotation",
			"background_color": "color(var(red) a(0.1))",
			"color": "color(var(base00) l(- 5%))"
		},
		{
			"class": "inserted_annotation",
			"background_color": "color(var(green) a(0.1))",
			"color": "color(var(base00) l(- 5%))"
		},
		// File headers
		{
			"class": "file_diff_header",
			"layer0.tint": "var(base2)"
		},
		// NOTE The disclosure_button_control is styled in the general section.
		// This also styles the text in the "Discard/Stage all" buttons,
		// which isn't how the default theme works, but I thought it
		// created a nice visual distinction between staging single files and all files.
		{
			"class": "label_control",
			"parents": [{"class": "expand_all_diff_control"}],
			"color": "var(base1)"
		},
		// Since the above also styles the buttons, we have to reset
		// the text color when the button is in "confirm" state.
		{
			"class": "label_control",
			"parents": [
				{"class": "expand_all_diff_control"},
				{"class": "button_control", "attributes": ["confirm"]}
			],
			"color": "var(base3)"
		},
		{
			"class": "eliding_label_control",
			"color": "var(base01)"
		},
		// Remove some styling that the default theme use to fake borders.
		{
			"class": "button_control all_button",
			"layer0.inner_margin": null,
			"layer0.texture": null
		},
		// Invert the button colors when they are on a base2 background.
		// NOTE The color of the '...' (more) button is set by icon_more.
		{
			"class": "button_control",
			"parents": [
				{"class": "file_diff_header"},
			],
			"layer0.tint": "var(base3)",
			"layer1.tint": "var(base2)"
		},
		// Hunk headers
		{
			"class": "file_diff_hunk_header",
			"layer0.tint": "var(base3)"
		},
		// Get the hunk button behaviour from the default theme.
		// It is implemented a bit differently, but the behaviour is more or less the same.
		{
			"class": "hunk_button",
			"parents":
			[
				{"class": "file_diff_hunk_container", "attributes": ["!hover"]},
				{"class": "file_diff_hunk_header", "attributes": ["!selected"]}
			],
			"layer0.opacity": 0
		},
		{
			"class": "label_control",
			"parents":
			[
				{"class": "file_diff_hunk_container", "attributes": ["!hover"]},
				{"class": "file_diff_hunk_header", "attributes": ["!selected"]},
				{"class": "hunk_button"}
			],
			"opacity": 0
		},
		{
			"class": "terminator",
			"layer0.tint": "var(base2)"
		},
		// LOCATION BAR
		// The default theme will set 100% opacity
		// when hovering over row or if it is selected.
		{
			"class": "location_bar_row",
			"layer0.tint": "var(base2)"
		},
		{
			"class": "location_bar_heading",
			"color": "var(base01)"
		},
		{
			"class": "location_bar_label",
			"color": "var(base00)"
		},
		// Override the default button_control to make
		// the background of the "eye" button transparent.
		// The actual icons are styled with the other icons.
		{
			"class": "button_control icon_button transparent",
			"layer0.opacity": 0,
			"layer1.opacity": 0
		},
		// Hide these icons if the location bar is not hovered.
		{
			"class": "icon_visible",
			"parents": [{"class": "side_bar_container", "attributes": ["!hover"]}],
			"layer0.opacity": 0
		},
		{
			"class": "icon_section_actions",
			"parents": [{"class": "side_bar_container", "attributes": ["!hover"]}],
			"layer0.opacity": 0
		},
		// The icon_ahead and icon_behind is styled with the other icons.
		// The branch_stat is styled like a button_control.
		{
			"class": "branch_stat",
			"layer0.tint": "var(base2)",
			"layer0.opacity": 1,
			"layer1.tint": "var(base3)",
			"layer1.opacity": 0
		},
		{
			"class": "branch_stat",
			"attributes": ["hover"],
			"layer1.opacity": { "target": 0.6, "speed": 4.0, "interpolation": "smoothstep" }
		},
		{
			"class": "branch_stat_label",
			"color": "var(base1)"
		}
	]
}
